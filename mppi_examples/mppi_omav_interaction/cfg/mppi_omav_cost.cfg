#!/usr/bin/env python
PACKAGE = "mppi_omav_interaction"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#######################
### Cost Parameters ###
#######################
gen.add("Q_x_omav", double_t, 0, "Pose Cost X", 10, 0.0, 250)
gen.add("Q_y_omav", double_t, 0, "Pose Cost Y", 10, 0.0, 250)
gen.add("Q_z_omav", double_t, 0, "Pose Cost Z", 10, 0.0, 250)
gen.add("Q_orientation_omav", double_t, 0, "Pose Cost Orientation", 10, 0.0, 250)
gen.add("Q_object", double_t, 0, "Object Cost", 10, 0.0, 250)
gen.add("Q_linear_velocity", double_t, 0, "Linear Velocity Cost OMAV", 0.1, 0.0, 10)
gen.add("Q_roll", double_t, 0, "Angular Velocity Cost OMAV", 0.1, 0.0, 10)
gen.add("Q_pitch", double_t, 0, "Angular Velocity Cost OMAV", 0.1, 0.0, 10)
gen.add("Q_yaw", double_t, 0, "Angular Velocity Cost OMAV", 0.1, 0.0, 10)
gen.add("Handle_Hook_Threshold", double_t, 0, "Hook Handle Threshold", 0.1, 0.0, 1)
gen.add("Handle_Hook_Cost", double_t, 0, "Hook Handle Cost", 100.0, 0.0, 1000.0)
gen.add("Floor_Threshold", double_t, 0, "Floor Threshold", 0.4, 0.0, 1.0)
gen.add("floor_cost", double_t, 0, "Cost for flying to close to the floor", 1000, 0.0, 1500)
gen.add("power_cost", double_t, 0, "Cost for power", 2.0, 0.0, 100.0)
gen.add("torque_cost", double_t, 0, "Cost for torque", 1.0, 0.0, 100.0)

exit(gen.generate(PACKAGE, "omav_interaction_cost", "MPPIOmavCost"))
