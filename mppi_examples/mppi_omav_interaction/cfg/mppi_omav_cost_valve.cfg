#!/usr/bin/env python
PACKAGE = "mppi_omav_interaction"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#######################
### Cost Parameters ###
#######################
gen.add("ref_p", double_t, 0, "Reference valve pos", 0.5, -2, 2)
gen.add("ref_v", double_t, 0, "Reference valve vel", 0, -2, 2)

ff_group = gen.add_group("A Free Flight")
ff_group.add("Q_x_omav", double_t, 0, "Pose Cost X", 10, 0.0, 250)
ff_group.add("Q_y_omav", double_t, 0, "Pose Cost Y", 10, 0.0, 250)
ff_group.add("Q_z_omav", double_t, 0, "Pose Cost Z", 10, 0.0, 250)
ff_group.add("Q_orientation_omav", double_t, 0, "Pose Cost Orientation", 10, 0.0, 250)
ff_group.add("Q_linear_velocity", double_t, 0, "Linear Velocity Cost OMAV", 0.0, 0.0, 10)
ff_group.add("Q_roll", double_t, 0, "Angular Velocity Cost OMAV", 0.0, 0.0, 10)
ff_group.add("Q_pitch", double_t, 0, "Angular Velocity Cost OMAV", 0.0, 0.0, 10)
ff_group.add("Q_yaw", double_t, 0, "Angular Velocity Cost OMAV", 0.0, 0.0, 10)

int_group = gen.add_group("B Interaction")
int_group.add("Q_int_roll", double_t, 0, "Roll cost during interaction", 10, 0.0, 250)
int_group.add("Q_int_pitch", double_t, 0, "Pitch cost during interaction", 10, 0.0, 250)
int_group.add("Q_object", double_t, 0, "Object Cost", 150.0, 0.0, 250.0)
int_group.add("Q_unwanted_contact", double_t, 0, "Unwanted contact", 10.0, 0.0, 250.0)
int_group.add("Q_object_distance", double_t, 0, "Cost when too close to object", 10, 0.0, 250)
int_group.add("object_distance_thresh", double_t, 0, "Threshold when close cost is enabled", 0.5, 0.0, 1)
int_group.add("handle_hook_thresh", double_t, 0, "Hook Handle Threshold", 0.03, 0.0, 1)
int_group.add("handle_hook_cost", double_t, 0, "Hook Handle Cost", 100.0, 0.0, 1000.0)
int_group.add("force_cost", double_t, 0, "Cost for force", 1.0, 0.0, 100.0)
# int_group.add("efficiency_cost", double_t, 0, "Cost for efficiency", 1.0, 0.0, 100.0)
# int_group.add("torque_cost", double_t, 0, "Cost for torque", 200.0, 0.0, 300.0)
int_group.add("contact_prohibitor", bool_t, 0, "Enable to prohibit collisions", True)
int_group.add("floor_thresh", double_t, 0, "Floor Threshold", 0.2, 0.0, 1.0)
int_group.add("floor_cost", double_t, 0, "Cost for flying to close to the floor", 1000, 0.0, 1500)

exit(gen.generate(PACKAGE, "mppi_omav_interaction", "MPPIOmavCostValve"))
