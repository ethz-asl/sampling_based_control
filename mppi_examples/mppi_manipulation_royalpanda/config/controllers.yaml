joint_publisher:
  type: "joint_state_controller/JointStateController"
  publish_rate: 50

manipulation_controller:
  type: manipulation_royalpanda/ManipulationController
  references_file: $(find mppi_manipulation_royalpanda)/config/experiments/references.yaml
  default_pose: [0.62, 0.005, 1.43, 0.99, 0.05, -0.1, -0.003]
  object_tolerance: 0.09 # ~5 deg

  arm_id: panda
  joint_names: [ panda_joint1, panda_joint2, panda_joint3, panda_joint4, panda_joint5, panda_joint6, panda_joint7 ]
  base_joint_names: [world_x, world_y, theta]

  state_topic: /observer/state
  nominal_state_topic: /x_nom
  base_twist_topic: /ridgeback_velocity_controller/cmd_vel

  sequential: false
  max_position_error: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]

  log_every_steps: 15

  policy_update_rate: 0.0  # execute as fast as possible
  reference_update_rate: 10.0
  publish_ros: true
  ros_publish_rate: 10.0
  static_optimization: false
  
  record_bag: false
  bag_path: "/media/giuseppe/My Passport/Work/bags/test.bag"
  
  # Cost parameters used by the controller
  rollouts: $(arg rollouts)
  cost:
    regularization: 0.0
    linear_weight: 100.0
    angular_weight: 10.0

    linear_weight_opening: 100.0
    angular_weight_opening: 100.0

    linear_tolerance_manipulation: 0.01
    angular_tolerance_manipulation: 0.6

    min_dist: 0.15
    max_reach: 0.65
    reach_weight: 100
    reach_weight_slope: 10

    obstacle_weight: 0
    obstacle_weight_slope: 0
    obstacle_radius: 0.8

    contact_weight: 100.0

    object_weight: 100
    object_tolerance: 0.01

    grasp_translation_offset: [ 0.0, 0.0, 0.0 ]
    grasp_orientation_offset: [ 0, -0.7071068, 0, 0.7071068 ]    # -90deg around y

    # For valve
    # grasp_translation_offset: [0.0, 0.01, 0.07]
    # grasp_orientation_offset: [0.7071068, 0, 0, 0.7071068]  # -90 deg x

    #upper_joint_limits: [ 2.0, 2.0, 6.28, 2.8973, 1.7628, 2.8973, 0.0698, 2.8973, 3.7525, 2.8973 ]
    #lower_joint_limits: [ -2.0, -2.0, -6.28, -2.8973, -1.7628, -2.8973, -3.0718, -2.8973, -0.0175, -2.8973 ]

    # Safer joint limits (+10 deg safety margin ~0.17)
    upper_joint_limits: [ 0.543, 2.0, 6.28, 2.72, 1.59, 2.72, -0.1, 2.72, 3.58, 2.72 ]
    lower_joint_limits: [ -2.0, -2.0, -6.28, -2.72, -1.59, -2.72, -2.90, -2.55, 0.152, -2.72 ]

    joint_limit_cost: 1000 #1000
    joint_limit_slope: 100 #100

    max_power: 0.0
    power_weight: 10.0
  
    handle_frame: handle_link
    tracked_frame: panda_grasp
    arm_base_frame: panda_link0

    collision_link_0: panda_link1
    collision_link_1: panda_link7

    collision_threshold: 0.35
    collision_weight: 1000


  controller_gains:
    base_gains:
      kp: [ 0.0, 0.0, 0.0 ]
      kd: [ 0.0, 0.0, 0.0 ]
      ki: [ 1.0, 1.0, 1.0 ]
      i_max: [ 0.0, 0.0, 0.0 ]
    arm_gains:
      kp: [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]
      kd: [ 50.0, 50.0, 50.0, 50.0, 20.0, 10.0, 1.0 ]
      ki: [ 80.0, 80.0, 80.0, 80.0, 40.0, 40.0, 2.0 ]
      i_max: [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]
    gripper_gains:
      kp: [ 100.0, 100.0 ]
      kd: [ 50.0, 50.0 ]
      ki: [ 0.0, 0.0 ]
      i_max: [ 0.0, 0.0 ]

  object_reference_position: 1.57

  # Parameters of the dynamics internal to the controller
  dynamics:
    dt: 0.015
    object_handle_link: handle_link
    object_handle_joint: handle_joint
    articulation_joint: articulation_joint

    has_filter: false
    apply_filter: false
    initial_state: [ 0.0, 0.0, 0.0, 0.0, -0.52, 0.0, -1.785, 0.0, 1.10, 0.69, 0.04, 0.04,    # robot position
                     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,             # robot velocity
                     0.0,                                                                    # object joint position
                     0.0,                                                                    # object joint velocity
                     0,                                                                      # contact flag
                     100,                                                                    # tank energy
                     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]            # external torques

    gains:
      base_gains:
        kp: [ 0.0, 0.0, 0.0 ]
        kd: [ 1000.0, 1000.0, 1000.0 ]
        ki: [ 0.0, 0.0, 0.0 ]
        i_max: [ 0.0, 0.0, 0.0 ]
      arm_gains:
        kp: [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]
        kd: [ 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0 ]
        ki: [ 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 ]
        i_max: [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]
      gripper_gains:
        kp: [ 100.0, 100.0 ]
        kd: [ 50.0, 50.0 ]
        ki: [ 0.0, 0.0 ]
        i_max: [ 0.0, 0.0 ]

  # Safety filter parameters
  # It processes the output of the sampled control action and enforces constraints
  apply_filter: $(arg filter_out)
  apply_filter_to_rollouts: $(arg filter_in)
  safety_filter:
    input_limits: 
      active: true
      soft: false
      slack_multiplier: 0.0
      u_min: [ -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0 ]
      u_max: [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]

    joint_limits: 
      active: true
      soft: true
      slack_multiplier: 10.0
      q_max: [ 0.543, 2.0, 6.28, 2.72, 1.59, 2.72, -0.1, 2.72, 3.58, 2.72 ]
      q_min: [ -2.0, -2.0, -6.28, -2.72, -1.59, -2.72, -2.90, -2.55, 0.152, -2.72 ]

    cartesian_limits: 
      active: true
      soft: true
      slack_multiplier: 10000.0
      max_reach: 0.65
      min_distance: 0.35

    object_avoidance:
      active: false
      soft: true
      slack_multiplier: 1.0
      min_distance: 0.9
      object_frame_id: shelf
  
    passivity_constraint:
      active: true
      soft: true
      slack_multiplier: 100.0
      initial_tank_energy: 10.0
      min_tank_energy: 2.0

    first_derivative_limits: 
      active: false
      ud_min: [ -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5 ]
      ud_max: [ 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5 ]

    second_derivative_limits: 
      active: false
      udd_min: [ -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5 ]
      udd_max: [ 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5 ]
    # udd_min: [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]
    # udd_max: [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]

    verbose: false

panda_position_controller:
  type: effort_controllers/JointGroupPositionController
  joints: ["panda_joint1",
           "panda_joint2",
           "panda_joint3",
           "panda_joint4",
           "panda_joint5",
           "panda_joint6",
           "panda_joint7"]
  panda_joint1:
    pid: { p: 120, d: 5, i: 0.0, i_clamp: 10000 }
  panda_joint2:
    pid: { p: 300, d: 10, i: 0.02, i_clamp: 10000 }
  panda_joint3:
    pid: { p: 180, d: 5, i: 0.01, i_clamp: 1 }
  panda_joint4:
    pid: { p: 180, d: 7, i: 0.01, i_clamp: 10000 }
  panda_joint5:
    pid: { p: 120, d: 7, i: 0.01, i_clamp: 1 }
  panda_joint6:
    pid: { p: 70, d: 5, i: 0.01, i_clamp: 1 }
  panda_joint7:
    pid: { p: 20, d: 2, i: 0.0, i_clamp: 1 }