<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <!--    Arguments-->
    <arg name="fixed_base" default="true"/>
    <arg name="object" default="door"/>
    <arg name="description_file" default="$(find mppi_manipulation)/data/panda.urdf.xacro"/>
    <arg name="tf_prefix" default=""/>

    <!--    Actor descriptions-->
    <param name="robot_description"
           command="$(find xacro)/xacro $(arg description_file) resources_prefix:='file://' add_finger:=true fixed_base:=$(arg fixed_base)"/>
    <param name="robot_description_raisim" command="$(find xacro)/xacro $(arg description_file)
      collision_links:=true
      collision_hand:=true
      collision_finger:=true
      collision_format:='obj'
      add_finger:=true
      no_position_limits:=true
      fixed_base:=$(arg fixed_base)"/>

    <param name="object_description"
           command="$(find xacro)/xacro $(find mppi_manipulation)/data/objects/$(arg object).urdf.xacro  resource_prefix:='file://'"/>
    <param name="object_description_raisim"
           command="$(find xacro)/xacro $(find mppi_manipulation)/data/objects/$(arg object).urdf.xacro"/>

    <node name="object_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
        <param name="use_tf_static" value="true"/>
        <param name="publish_frequency" value="100"/>
        <remap from="robot_description" to="object_description"/>
        <remap from="joint_states" to="/object/joint_state"/>
    </node>

    <!--  Controllers -->
    <rosparam file="$(find mppi_manipulation)/config/ros_controller.yaml" command="load" subst_value="true"/>

    <!--  Robot-->
    <arg name="description_file" default="$(find robot_control_assets)/assets/arms/panda/panda.urdf.xacro"/>
    <param name="robot_description"
           command="$(find xacro)/xacro.py $(arg description_file) mesh_prefix:=package://robot_control_assets/"/>

    <node name="franka_control" pkg="franka_control" type="franka_control_node" output="screen" required="true">
        <rosparam command="load" file="$(find franka_control)/config/franka_control_node.yaml"/>
        <param name="robot_ip" value="$(env FRANKA_IP)"/>
    </node>

    <node name="state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
          args="franka_state_controller mppi_panda"/>
    <rosparam command="load" file="$(find franka_control)/config/default_controllers.yaml"/>

    <!--    TODO(giuseppe) use the real royal panda description here and rely on tf publishing of the base-->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
        <param name="publish_frequency" value="100"/>
        <param name="use_tf_static" value="true"/>
        <param name="tf_prefix" value=""/>
        <remap from="robot_description" to="/robot_description"/>
        <remap from="joint_states" to="/franka_state_controller/joint_states"/>
    </node>

</launch>
