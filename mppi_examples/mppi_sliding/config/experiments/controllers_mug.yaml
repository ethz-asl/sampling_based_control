joint_publisher:
  type: "joint_state_controller/JointStateController"
  publish_rate: 50

mppi_sliding:
  type: manipulation_panda/ManipulationController
  references_file: $(find mppi_sliding)/config/experiments/references.yaml
  default_pose: [0.62, 0.005, 1.43, 0.99, 0.05, -0.1, -0.003]
  object_tolerance: 0.09 # ~5 deg

  arm_id: panda
  joint_names: [ panda_joint1, panda_joint2, panda_joint3, panda_joint4, panda_joint5, panda_joint6, panda_joint7 ]

  state_topic: /observer/state    # modify into the topic of kp tracker
  nominal_state_topic: /x_nom
  table_state_topic: /table/joint_state

  sequential: false
  #max_position_error: [10, 10, 10, 10, 10, 10, 10]
  max_position_error: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
  #max_position_error: [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

  log_every_steps: 15

  policy_update_rate: 0.0  # execute as fast as possible
  reference_update_rate: 10.0
  publish_ros: true
  ros_publish_rate: 10.0
  static_optimization: false
  
  record_bag: false
  bag_path: ""
  
  # Cost parameters used by the controller
  rollouts: 20

  setup_config:
    fixed_base: true
    update_geometry: true


  cost:
    regularization: 0.0
    linear_weight: 300.0
    angular_weight: 10.0

    linear_weight_opening: 100.0
    angular_weight_opening: 100.0

    linear_tolerance_manipulation: 0.01
    angular_tolerance_manipulation: 0.6

    min_dist: 0.15
    max_reach: 0.65
    reach_weight: 0
    reach_weight_slope: 0

    obstacle_weight: 0
    obstacle_weight_slope: 0
    obstacle_radius: 0.8

    contact_weight: 10.0

    object_weight: 150
    object_tolerance: 0.01

    grasp_translation_offset: [ 0.0, 0.0, 0.0 ]
    grasp_orientation_offset: [ 0, -0.7071068, 0, 0.7071068 ]    # -90deg around y

    # Safer joint limits (+10 deg safety margin ~0.17)
    # upper_joint_limits: [6.28, 2.72, 1.59, 2.72, -0.1, 2.72, 3.58, 2.72 ]
    # lower_joint_limits: [-6.28, -2.72, -1.59, -2.72, -2.90, -2.55, 0.152, -2.72 ]

    upper_joint_limits: [6.28, 2.72, 3.15, 3.16, 6.28, 6.28, 6.28, 2.72 ]
    lower_joint_limits: [-2.72, -2.72, -1.59, -2.72, -6.28, -6.28, -6.28, -2.72 ]

    joint_limit_cost: 1000 #1000
    joint_limit_slope: 100 #100

    max_power: 0.0
    power_weight: 10.0
  
    handle_frame: handle_link
    tracked_frame: panda_grasp
    arm_base_frame: panda_link0

    collision_link_0: panda_link1
    collision_link_1: panda_link7

    collision_threshold: 0.35
    collision_weight: 1000

  controller_gains:
    base_gains:
      kp: []
      kd: []
      ki: []
      i_max: []
    arm_gains:
      kp: [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]
      # kd: [ 15.0, 15.0, 15.0, 15.0, 10.0, 10.0, 1.0 ]
      # ki: [ 30.0, 30.0, 30.0, 30.0, 25.0, 20.0, 5.0 ]
      # i_max: [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]
      kd: [ 30.0, 30.0, 30.0, 30.0, 10.0, 10.0, 1.0 ]
      ki: [ 40.0, 30.0, 40.0, 30.0, 30.0, 15.0, 2.0 ]
      i_max: [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]
    gripper_gains:
      kp: [ 100.0, 100.0 ]
      kd: [ 50.0, 50.0 ]
      ki: [ 0.0, 0.0 ]
      i_max: [ 0.0, 0.0 ]

  object_reference_position: 1.57

  # Parameters of the dynamics internal to the controller

  geometry:
    cylinder_height: 0.11
    cylinder_radius: 0.02
    cylinder_mass: 1    # ideally equal to the object
    cylinder_z: 0.98 # table_z + 1/2(table_height+cylinder_height)
    table_position: [1.2,0,0.04] 
    target_pos: [0.58, 0.65, 0.28]
    friction: 0.15  

  dynamics:
    dt: 0.015
    object_handle_link: handle_link
    object_handle_joint: handle_joint
    articulation_joint: articulation_joint

    update_dynamics_from_perception: true

    has_filter: false
    apply_filter: false
    initial_state: [ 0.62, 0.005, 1.43, 0.99, 0.05, -0.1, -0.003, 0.0, 0.0,   # robot position 9
                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,             # robot velocity 9
                   1.2, 0.0, 0.15, -0.707, 0.0, 0, -0.707,                  # object joint pose  3+4
                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,                       # object joint velocity 3+4
                   0]            # contact flag
    gains:
      base_gains:
        kp: []
        kd: []
        ki: []
        i_max: []
      arm_gains:
        kp: [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]
        kd: [ 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0 ]
        ki: [ 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 ]
        i_max: [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]
      gripper_gains:
        kp: [ 100.0, 100.0 ]
        kd: [ 50.0, 50.0 ]
        ki: [ 0.0, 0.0 ]
        i_max: [ 0.0, 0.0 ]


# only for simulation 
panda_position_controller:
  type: effort_controllers/JointGroupPositionController
  joints: ["panda_joint1",
           "panda_joint2",
           "panda_joint3",
           "panda_joint4",
           "panda_joint5",
           "panda_joint6",
           "panda_joint7"]
  panda_joint1:
    pid: { p: 120, d: 5, i: 0.0, i_clamp: 10000 }
  panda_joint2:
    pid: { p: 300, d: 10, i: 0.02, i_clamp: 10000 }
  panda_joint3:
    pid: { p: 180, d: 5, i: 0.01, i_clamp: 1 }
  panda_joint4:
    pid: { p: 180, d: 7, i: 0.01, i_clamp: 10000 }
  panda_joint5:
    pid: { p: 120, d: 7, i: 0.01, i_clamp: 1 }
  panda_joint6:
    pid: { p: 70, d: 5, i: 0.01, i_clamp: 1 }
  panda_joint7:
    pid: { p: 20, d: 2, i: 0.0, i_clamp: 1 }
