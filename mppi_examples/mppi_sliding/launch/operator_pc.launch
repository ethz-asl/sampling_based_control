<?xml version="1.0" encoding="UTF-8"?>
<launch>
	<arg name="plot" default="false"/>
    <arg name="enable_obstacle" default="false"/>
	<arg name="debug" default="false"/>
    <arg name="run_camera" default="true"/>
    <arg name="depth" default="false"/>
    <arg name="pointcloud" default="false"/>
    <arg name="pub_handeye_trans" default="false"/>

	<include file="$(find mppi_sliding)/launch/common.launch">
	    <arg name="plot" default="$(arg plot)"/>
	    <arg name="enable_obstacle" default="$(arg enable_obstacle)"/>
	</include>

    <include file="$(find mppi_sliding)/launch/load.launch">
        <arg name="debug" value="false"/>
        <arg name="description_file" value="$(find mppi_sliding)/data/panda.urdf.xacro"/>
        <arg name="load_simulation_object" value="false"/>
    </include>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
        <param name="publish_frequency" value="100"/>
        <remap from="robot_description" to="robot_description"/>
        <remap from="joint_states" to="/panda/joint_states"/>
    </node>

    <node name="table_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
        <param name="publish_frequency" value="100"/>
        <remap from="robot_description" to="table_description_raisim"/>
        <remap from="joint_states" to="/table/joint_state"/>
    </node>

    <node name="interactive_object" pkg="mppi_sliding" type="interactive_object.py" output="screen">
        <rosparam command="load" file="$(find object_modeling_playground)/params/fake_obj.yaml"/>
        <param name="marker_server_name" value="reference_marker_server"/>
        <param name="subscribe_initial_pose" value="true"/>
        <param name="object_state_topic" value="/object/state"/>
        <param name="frame_id" value="world"/>
    </node>

    <include file="$(find realsense2_camera)/launch/rs_camera.launch" if="$(arg run_camera)">
         <arg name="align_depth" value="$(arg depth)"/>
         <arg name="enable_pointcloud" value="$(arg pointcloud)"/>
         <arg name="allow_no_texture_points" value="false"/>
    </include>

	<group if="$(arg debug)">
		<node name="robot_joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui">
            <remap from="robot_description" to="robot_description"/>
            <remap from="joint_states" to="/panda/joint_states"/>
        </node>
    </group>

    <group if="$(arg pub_handeye_trans)">
        <include file="$(find easy_handeye)/launch/publish.launch">
            <arg name="eye_on_hand" value="false"/>
        </include>
    </group>

	<node name="controller_manager_gui" type="rqt_controller_manager" pkg="rqt_controller_manager" output="screen"/>

</launch>
